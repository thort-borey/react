{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/University/Web application development/Lab/Lab 19 - React JS/ecommerce/src/Components/paypal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PayPal = ({\n  total\n}) => {\n  _s();\n  const paypalRef = useRef(null); // Create a ref for the PayPal container\n  const [sdkReady, setSdkReady] = useState(false); // Track if the SDK is ready\n\n  useEffect(() => {\n    // Check if PayPal SDK is already loaded\n    if (window.paypal) {\n      setSdkReady(true);\n    } else {\n      // Dynamically load the PayPal SDK script\n      const script = document.createElement('script');\n      script.src = 'https://www.paypal.com/sdk/js?client-id=AQpDVDsTN1hXrieCNukTp48w1CV8WaRy--atpa9-f_eSxryIwte3dD4Q2XzS8TKWhtAAG81XlgQ5kSh9';\n      script.async = true;\n      script.onload = () => setSdkReady(true);\n      document.body.appendChild(script);\n    }\n  }, []); // Run only once when the component mounts\n\n  useEffect(() => {\n    if (sdkReady && paypalRef.current) {\n      paypalRef.current.innerHTML = ''; // Clear any existing buttons\n      window.paypal.Buttons({\n        createOrder: (data, actions) => {\n          return actions.order.create({\n            purchase_units: [{\n              amount: {\n                value: total.toFixed(2) // Use the total amount\n              }\n            }]\n          });\n        },\n        onApprove: (data, actions) => {\n          return actions.order.capture().then(details => {\n            alert(`Transaction completed by ${details.payer.name.given_name}`);\n            console.log('Transaction details:', details);\n          });\n        },\n        onError: err => {\n          console.error('PayPal error:', err);\n        }\n      }).render(paypalRef.current); // Render into the ref container\n    }\n  }, [sdkReady, total]); // Re-run only when `sdkReady` or `total` changes\n\n  if (!sdkReady) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading PayPal...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 16\n    }, this); // Show a loading message while SDK loads\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: paypalRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 12\n  }, this); // Attach the ref to the container\n};\n_s(PayPal, \"cpAN+nzd1DKpor6Vzio2MJeNCwE=\");\n_c = PayPal;\nexport default PayPal;\nvar _c;\n$RefreshReg$(_c, \"PayPal\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","PayPal","total","_s","paypalRef","sdkReady","setSdkReady","window","paypal","script","document","createElement","src","async","onload","body","appendChild","current","innerHTML","Buttons","createOrder","data","actions","order","create","purchase_units","amount","value","toFixed","onApprove","capture","then","details","alert","payer","name","given_name","console","log","onError","err","error","render","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","$RefreshReg$"],"sources":["/Users/user/Desktop/University/Web application development/Lab/Lab 19 - React JS/ecommerce/src/Components/paypal.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\n\nconst PayPal = ({ total }) => {\n    const paypalRef = useRef(null); // Create a ref for the PayPal container\n    const [sdkReady, setSdkReady] = useState(false); // Track if the SDK is ready\n\n    useEffect(() => {\n        // Check if PayPal SDK is already loaded\n        if (window.paypal) {\n            setSdkReady(true);\n        } else {\n            // Dynamically load the PayPal SDK script\n            const script = document.createElement('script');\n            script.src = 'https://www.paypal.com/sdk/js?client-id=AQpDVDsTN1hXrieCNukTp48w1CV8WaRy--atpa9-f_eSxryIwte3dD4Q2XzS8TKWhtAAG81XlgQ5kSh9';\n            script.async = true;\n            script.onload = () => setSdkReady(true);\n            document.body.appendChild(script);\n        }\n    }, []); // Run only once when the component mounts\n\n    useEffect(() => {\n        if (sdkReady && paypalRef.current) {\n            paypalRef.current.innerHTML = ''; // Clear any existing buttons\n            window.paypal.Buttons({\n                createOrder: (data, actions) => {\n                    return actions.order.create({\n                        purchase_units: [\n                            {\n                                amount: {\n                                    value: total.toFixed(2), // Use the total amount\n                                },\n                            },\n                        ],\n                    });\n                },\n                onApprove: (data, actions) => {\n                    return actions.order.capture().then((details) => {\n                        alert(`Transaction completed by ${details.payer.name.given_name}`);\n                        console.log('Transaction details:', details);\n                    });\n                },\n                onError: (err) => {\n                    console.error('PayPal error:', err);\n                },\n            }).render(paypalRef.current); // Render into the ref container\n        }\n    }, [sdkReady, total]); // Re-run only when `sdkReady` or `total` changes\n\n    if (!sdkReady) {\n        return <div>Loading PayPal...</div>; // Show a loading message while SDK loads\n    }\n\n    return <div ref={paypalRef}></div>; // Attach the ref to the container\n};\n\nexport default PayPal;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,MAAM,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAC1B,MAAMC,SAAS,GAAGP,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;EAChC,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAEjDF,SAAS,CAAC,MAAM;IACZ;IACA,IAAIW,MAAM,CAACC,MAAM,EAAE;MACfF,WAAW,CAAC,IAAI,CAAC;IACrB,CAAC,MAAM;MACH;MACA,MAAMG,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;MAC/CF,MAAM,CAACG,GAAG,GAAG,0HAA0H;MACvIH,MAAM,CAACI,KAAK,GAAG,IAAI;MACnBJ,MAAM,CAACK,MAAM,GAAG,MAAMR,WAAW,CAAC,IAAI,CAAC;MACvCI,QAAQ,CAACK,IAAI,CAACC,WAAW,CAACP,MAAM,CAAC;IACrC;EACJ,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAERb,SAAS,CAAC,MAAM;IACZ,IAAIS,QAAQ,IAAID,SAAS,CAACa,OAAO,EAAE;MAC/Bb,SAAS,CAACa,OAAO,CAACC,SAAS,GAAG,EAAE,CAAC,CAAC;MAClCX,MAAM,CAACC,MAAM,CAACW,OAAO,CAAC;QAClBC,WAAW,EAAEA,CAACC,IAAI,EAAEC,OAAO,KAAK;UAC5B,OAAOA,OAAO,CAACC,KAAK,CAACC,MAAM,CAAC;YACxBC,cAAc,EAAE,CACZ;cACIC,MAAM,EAAE;gBACJC,KAAK,EAAEzB,KAAK,CAAC0B,OAAO,CAAC,CAAC,CAAC,CAAE;cAC7B;YACJ,CAAC;UAET,CAAC,CAAC;QACN,CAAC;QACDC,SAAS,EAAEA,CAACR,IAAI,EAAEC,OAAO,KAAK;UAC1B,OAAOA,OAAO,CAACC,KAAK,CAACO,OAAO,CAAC,CAAC,CAACC,IAAI,CAAEC,OAAO,IAAK;YAC7CC,KAAK,CAAC,4BAA4BD,OAAO,CAACE,KAAK,CAACC,IAAI,CAACC,UAAU,EAAE,CAAC;YAClEC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEN,OAAO,CAAC;UAChD,CAAC,CAAC;QACN,CAAC;QACDO,OAAO,EAAGC,GAAG,IAAK;UACdH,OAAO,CAACI,KAAK,CAAC,eAAe,EAAED,GAAG,CAAC;QACvC;MACJ,CAAC,CAAC,CAACE,MAAM,CAACtC,SAAS,CAACa,OAAO,CAAC,CAAC,CAAC;IAClC;EACJ,CAAC,EAAE,CAACZ,QAAQ,EAAEH,KAAK,CAAC,CAAC,CAAC,CAAC;;EAEvB,IAAI,CAACG,QAAQ,EAAE;IACX,oBAAOL,OAAA;MAAA2C,QAAA,EAAK;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,CAAC,CAAC;EACzC;EAEA,oBAAO/C,OAAA;IAAKgD,GAAG,EAAE5C;EAAU;IAAAwC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC,CAAC,CAAC;AACxC,CAAC;AAAC5C,EAAA,CAnDIF,MAAM;AAAAgD,EAAA,GAANhD,MAAM;AAqDZ,eAAeA,MAAM;AAAC,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}